/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// emptyVaultModal.ts
var emptyVaultModal_exports = {};
__export(emptyVaultModal_exports, {
  EmptyVaultModal: () => EmptyVaultModal
});
module.exports = __toCommonJS(emptyVaultModal_exports);
var import_obsidian = require("obsidian");
var EmptyVaultModal = class extends import_obsidian.Modal {
  constructor(app, onSubmit) {
    super(app);
    this.setTitle("Warning: Empty Vault Push");
    this.contentEl.innerHTML = `
			<p>
				You are about to push an empty vault to a non-empty Obsidian vault on GitHub. This will result in the <strong>erasure of all the content</strong> 
				currently in the repository.
				<br>
				Although the content can be recovered by manually checking the commit history of GitHub, this process may be complicated if you are not familiar with Git/GitHub.
				<br>
				<strong>Please ensure that this action is intentional</strong> before proceeding. Press "Accept" if you're sure you want to continue. 
				Press "Cancel" if you want to avoid making any changes.
			</p>
			<ul>
				<li>Press <strong>"Accept":</strong> to proceed with erasing and pushing the empty vault.</li>
				<br>
				<li>Press <strong>"Cancel":</strong> to abort the operation.</li>
			</ul>
		`;
    new import_obsidian.Setting(this.contentEl).addButton((button) => {
      button.setButtonText("Accept").onClick(() => {
        this.close();
        onSubmit(true);
      });
    }).addButton((button) => {
      button.setButtonText("Cancel").onClick(() => {
        this.close();
        onSubmit(false);
      });
    });
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  EmptyVaultModal
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiZW1wdHlWYXVsdE1vZGFsLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJpbXBvcnQgeyBNb2RhbCwgQXBwLCBTZXR0aW5nIH0gZnJvbSAnb2JzaWRpYW4nO1xyXG5cclxuZXhwb3J0IGNsYXNzIEVtcHR5VmF1bHRNb2RhbCBleHRlbmRzIE1vZGFsIHtcclxuXHRjb25zdHJ1Y3RvcihhcHA6IEFwcCwgb25TdWJtaXQ6IChyZXN1bHQ6IGJvb2xlYW4pID0+IHZvaWQpIHtcclxuXHRcdHN1cGVyKGFwcCk7XHJcblx0XHR0aGlzLnNldFRpdGxlKCdXYXJuaW5nOiBFbXB0eSBWYXVsdCBQdXNoJyk7XHJcblx0XHR0aGlzLmNvbnRlbnRFbC5pbm5lckhUTUwgPSBgXHJcblx0XHRcdDxwPlxyXG5cdFx0XHRcdFlvdSBhcmUgYWJvdXQgdG8gcHVzaCBhbiBlbXB0eSB2YXVsdCB0byBhIG5vbi1lbXB0eSBPYnNpZGlhbiB2YXVsdCBvbiBHaXRIdWIuIFRoaXMgd2lsbCByZXN1bHQgaW4gdGhlIDxzdHJvbmc+ZXJhc3VyZSBvZiBhbGwgdGhlIGNvbnRlbnQ8L3N0cm9uZz4gXHJcblx0XHRcdFx0Y3VycmVudGx5IGluIHRoZSByZXBvc2l0b3J5LlxyXG5cdFx0XHRcdDxicj5cclxuXHRcdFx0XHRBbHRob3VnaCB0aGUgY29udGVudCBjYW4gYmUgcmVjb3ZlcmVkIGJ5IG1hbnVhbGx5IGNoZWNraW5nIHRoZSBjb21taXQgaGlzdG9yeSBvZiBHaXRIdWIsIHRoaXMgcHJvY2VzcyBtYXkgYmUgY29tcGxpY2F0ZWQgaWYgeW91IGFyZSBub3QgZmFtaWxpYXIgd2l0aCBHaXQvR2l0SHViLlxyXG5cdFx0XHRcdDxicj5cclxuXHRcdFx0XHQ8c3Ryb25nPlBsZWFzZSBlbnN1cmUgdGhhdCB0aGlzIGFjdGlvbiBpcyBpbnRlbnRpb25hbDwvc3Ryb25nPiBiZWZvcmUgcHJvY2VlZGluZy4gUHJlc3MgXCJBY2NlcHRcIiBpZiB5b3UncmUgc3VyZSB5b3Ugd2FudCB0byBjb250aW51ZS4gXHJcblx0XHRcdFx0UHJlc3MgXCJDYW5jZWxcIiBpZiB5b3Ugd2FudCB0byBhdm9pZCBtYWtpbmcgYW55IGNoYW5nZXMuXHJcblx0XHRcdDwvcD5cclxuXHRcdFx0PHVsPlxyXG5cdFx0XHRcdDxsaT5QcmVzcyA8c3Ryb25nPlwiQWNjZXB0XCI6PC9zdHJvbmc+IHRvIHByb2NlZWQgd2l0aCBlcmFzaW5nIGFuZCBwdXNoaW5nIHRoZSBlbXB0eSB2YXVsdC48L2xpPlxyXG5cdFx0XHRcdDxicj5cclxuXHRcdFx0XHQ8bGk+UHJlc3MgPHN0cm9uZz5cIkNhbmNlbFwiOjwvc3Ryb25nPiB0byBhYm9ydCB0aGUgb3BlcmF0aW9uLjwvbGk+XHJcblx0XHRcdDwvdWw+XHJcblx0XHRgO1xyXG5cclxuXHRcdG5ldyBTZXR0aW5nKHRoaXMuY29udGVudEVsKVxyXG5cdFx0XHQuYWRkQnV0dG9uKGJ1dHRvbiA9PiB7XHJcblx0XHRcdFx0YnV0dG9uLnNldEJ1dHRvblRleHQoJ0FjY2VwdCcpXHJcblx0XHRcdFx0XHQub25DbGljaygoKSA9PiB7XHJcblx0XHRcdFx0XHRcdHRoaXMuY2xvc2UoKTtcclxuXHRcdFx0XHRcdFx0b25TdWJtaXQodHJ1ZSk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHJcblx0XHRcdH0pXHJcblx0XHRcdC5hZGRCdXR0b24oYnV0dG9uID0+IHtcclxuXHRcdFx0XHRidXR0b24uc2V0QnV0dG9uVGV4dCgnQ2FuY2VsJylcclxuXHRcdFx0XHRcdC5vbkNsaWNrKCgpID0+IHtcclxuXHRcdFx0XHRcdFx0dGhpcy5jbG9zZSgpO1xyXG5cdFx0XHRcdFx0XHRvblN1Ym1pdChmYWxzZSk7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0fSk7XHJcblx0fVxyXG59XHJcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxzQkFBb0M7QUFFN0IsSUFBTSxrQkFBTixjQUE4QixzQkFBTTtBQUFBLEVBQzFDLFlBQVksS0FBVSxVQUFxQztBQUMxRCxVQUFNLEdBQUc7QUFDVCxTQUFLLFNBQVMsMkJBQTJCO0FBQ3pDLFNBQUssVUFBVSxZQUFZO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBaUIzQixRQUFJLHdCQUFRLEtBQUssU0FBUyxFQUN4QixVQUFVLFlBQVU7QUFDcEIsYUFBTyxjQUFjLFFBQVEsRUFDM0IsUUFBUSxNQUFNO0FBQ2QsYUFBSyxNQUFNO0FBQ1gsaUJBQVMsSUFBSTtBQUFBLE1BQ2QsQ0FBQztBQUFBLElBRUgsQ0FBQyxFQUNBLFVBQVUsWUFBVTtBQUNwQixhQUFPLGNBQWMsUUFBUSxFQUMzQixRQUFRLE1BQU07QUFDZCxhQUFLLE1BQU07QUFDWCxpQkFBUyxLQUFLO0FBQUEsTUFDZixDQUFDO0FBQUEsSUFDSCxDQUFDO0FBQUEsRUFDSDtBQUNEOyIsCiAgIm5hbWVzIjogW10KfQo=
