/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// conflictModal.ts
var conflictModal_exports = {};
__export(conflictModal_exports, {
  ConflictModal: () => ConflictModal
});
module.exports = __toCommonJS(conflictModal_exports);
var import_obsidian = require("obsidian");
var ConflictModal = class extends import_obsidian.Modal {
  constructor(app, onSubmit, lastLocalMod, lastRepoMod) {
    super(app);
    this.setTitle(`Possible Conflict Detected`);
    this.contentEl.innerHTML = `
		<p>
		It looks like there are changes in your local files that haven\u2019t been uploaded to the cloud yet. 
		If you continue, pulling the latest updates from the cloud might overwrite your local changes, 
		and you could lose your work.
		</p>

		<p>
		<strong>Conflict Information:</strong>
		</p>
		<p>
		- <strong>Last local modification: ${lastLocalMod.path} <br> At ${lastLocalMod.modifiedDate}</strong>
		</p>
		<p>
		- <strong>Last repository modification: ${lastRepoMod.path} <br> At ${lastRepoMod.modifiedDate}</strong>
		</p>

		<ul>
			<li>Press <strong>"Accept":</strong> Proceed and keep the cloud version. Your local changes will be replaced.</li>
			<br>
			<li>Press <strong>"Cancel":</strong> Stop this process. You can upload your local changes first to avoid losing them.</li>
		</ul>
		`;
    new import_obsidian.Setting(this.contentEl).addButton((button) => {
      button.setButtonText("Accept").onClick(() => {
        this.close();
        onSubmit(true);
      });
    }).addButton((button) => {
      button.setButtonText("Cancel").onClick(() => {
        this.close();
        onSubmit(false);
      });
    });
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ConflictModal
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiY29uZmxpY3RNb2RhbC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgTW9kYWwsIEFwcCwgU2V0dGluZyB9IGZyb20gJ29ic2lkaWFuJztcblxuZXhwb3J0IGNsYXNzIENvbmZsaWN0TW9kYWwgZXh0ZW5kcyBNb2RhbCB7XG5cdGNvbnN0cnVjdG9yKGFwcDogQXBwLCBvblN1Ym1pdDogKHJlc3VsdDogYm9vbGVhbikgPT4gdm9pZCwgbGFzdExvY2FsTW9kOiBhbnksIGxhc3RSZXBvTW9kOiBhbnkpIHtcblx0XHRzdXBlcihhcHApO1xuXHRcdHRoaXMuc2V0VGl0bGUoYFBvc3NpYmxlIENvbmZsaWN0IERldGVjdGVkYCk7XG5cdFx0dGhpcy5jb250ZW50RWwuaW5uZXJIVE1MID0gYFxuXHRcdDxwPlxuXHRcdEl0IGxvb2tzIGxpa2UgdGhlcmUgYXJlIGNoYW5nZXMgaW4geW91ciBsb2NhbCBmaWxlcyB0aGF0IGhhdmVuXHUyMDE5dCBiZWVuIHVwbG9hZGVkIHRvIHRoZSBjbG91ZCB5ZXQuIFxuXHRcdElmIHlvdSBjb250aW51ZSwgcHVsbGluZyB0aGUgbGF0ZXN0IHVwZGF0ZXMgZnJvbSB0aGUgY2xvdWQgbWlnaHQgb3ZlcndyaXRlIHlvdXIgbG9jYWwgY2hhbmdlcywgXG5cdFx0YW5kIHlvdSBjb3VsZCBsb3NlIHlvdXIgd29yay5cblx0XHQ8L3A+XG5cblx0XHQ8cD5cblx0XHQ8c3Ryb25nPkNvbmZsaWN0IEluZm9ybWF0aW9uOjwvc3Ryb25nPlxuXHRcdDwvcD5cblx0XHQ8cD5cblx0XHQtIDxzdHJvbmc+TGFzdCBsb2NhbCBtb2RpZmljYXRpb246ICR7bGFzdExvY2FsTW9kLnBhdGh9IDxicj4gQXQgJHtsYXN0TG9jYWxNb2QubW9kaWZpZWREYXRlfTwvc3Ryb25nPlxuXHRcdDwvcD5cblx0XHQ8cD5cblx0XHQtIDxzdHJvbmc+TGFzdCByZXBvc2l0b3J5IG1vZGlmaWNhdGlvbjogJHtsYXN0UmVwb01vZC5wYXRofSA8YnI+IEF0ICR7bGFzdFJlcG9Nb2QubW9kaWZpZWREYXRlfTwvc3Ryb25nPlxuXHRcdDwvcD5cblxuXHRcdDx1bD5cblx0XHRcdDxsaT5QcmVzcyA8c3Ryb25nPlwiQWNjZXB0XCI6PC9zdHJvbmc+IFByb2NlZWQgYW5kIGtlZXAgdGhlIGNsb3VkIHZlcnNpb24uIFlvdXIgbG9jYWwgY2hhbmdlcyB3aWxsIGJlIHJlcGxhY2VkLjwvbGk+XG5cdFx0XHQ8YnI+XG5cdFx0XHQ8bGk+UHJlc3MgPHN0cm9uZz5cIkNhbmNlbFwiOjwvc3Ryb25nPiBTdG9wIHRoaXMgcHJvY2Vzcy4gWW91IGNhbiB1cGxvYWQgeW91ciBsb2NhbCBjaGFuZ2VzIGZpcnN0IHRvIGF2b2lkIGxvc2luZyB0aGVtLjwvbGk+XG5cdFx0PC91bD5cblx0XHRgO1xuXG5cdFx0bmV3IFNldHRpbmcodGhpcy5jb250ZW50RWwpXG5cdFx0XHQuYWRkQnV0dG9uKGJ1dHRvbiA9PiB7XG5cdFx0XHRcdGJ1dHRvbi5zZXRCdXR0b25UZXh0KCdBY2NlcHQnKVxuXHRcdFx0XHRcdC5vbkNsaWNrKCgpID0+IHtcblx0XHRcdFx0XHRcdHRoaXMuY2xvc2UoKTtcblx0XHRcdFx0XHRcdG9uU3VibWl0KHRydWUpO1xuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHR9KVxuXHRcdFx0LmFkZEJ1dHRvbihidXR0b24gPT4ge1xuXHRcdFx0XHRidXR0b24uc2V0QnV0dG9uVGV4dCgnQ2FuY2VsJylcblx0XHRcdFx0XHQub25DbGljaygoKSA9PiB7XG5cdFx0XHRcdFx0XHR0aGlzLmNsb3NlKCk7XG5cdFx0XHRcdFx0XHRvblN1Ym1pdChmYWxzZSk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0fVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHNCQUFvQztBQUU3QixJQUFNLGdCQUFOLGNBQTRCLHNCQUFNO0FBQUEsRUFDeEMsWUFBWSxLQUFVLFVBQXFDLGNBQW1CLGFBQWtCO0FBQy9GLFVBQU0sR0FBRztBQUNULFNBQUssU0FBUyw0QkFBNEI7QUFDMUMsU0FBSyxVQUFVLFlBQVk7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHVDQVdVLGFBQWEsZ0JBQWdCLGFBQWE7QUFBQTtBQUFBO0FBQUEsNENBR3JDLFlBQVksZ0JBQWdCLFlBQVk7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBVWxGLFFBQUksd0JBQVEsS0FBSyxTQUFTLEVBQ3hCLFVBQVUsWUFBVTtBQUNwQixhQUFPLGNBQWMsUUFBUSxFQUMzQixRQUFRLE1BQU07QUFDZCxhQUFLLE1BQU07QUFDWCxpQkFBUyxJQUFJO0FBQUEsTUFDZCxDQUFDO0FBQUEsSUFFSCxDQUFDLEVBQ0EsVUFBVSxZQUFVO0FBQ3BCLGFBQU8sY0FBYyxRQUFRLEVBQzNCLFFBQVEsTUFBTTtBQUNkLGFBQUssTUFBTTtBQUNYLGlCQUFTLEtBQUs7QUFBQSxNQUNmLENBQUM7QUFBQSxJQUNILENBQUM7QUFBQSxFQUNIO0FBQ0Q7IiwKICAibmFtZXMiOiBbXQp9Cg==
